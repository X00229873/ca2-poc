AWSTemplateFormatVersion: "2010-09-09"
Description: EC2 deployment for Flask web app from GitHub

Parameters:
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: EC2CloudAppDeployment
    Description: "Your existing EC2 key pair for SSH"

  AMIId:
    Type: AWS::EC2::Image::Id
    Default: ami-01ff9fc7721895c6b
    Description: "Amazon Linux 2023 AMI ID"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [0, !GetAZs ""]

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  Route:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet
      RouteTableId: !Ref RouteTable

  FlaskSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP and SSH
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  FlaskEC2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      ImageId: !Ref AMIId
      SubnetId: !Ref Subnet
      SecurityGroupIds:
        - !Ref FlaskSecurityGroup
      Tags:
        - Key: Name
          Value: FlaskApp2
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          exec > /var/log/user-data.log 2>&1
          set -x
          dnf update -y
          dnf install -y python3 git
          pip3 install flask
          cd /home/ec2-user
          git clone https://github.com/X00229873/ca2-poc.git
          cd ca2-poc/app2
          nohup python3 app.py --host=0.0.0.0 --port=80 &
          
Outputs:
  FlaskAppURL:
    Description: Public IP of the Flask app
    Value: !Sub "http://${FlaskEC2.PublicIp}"
